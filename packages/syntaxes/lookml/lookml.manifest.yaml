scopeName: source.lookml.manifest

patterns:
  - include: "#comments"
  - include: "#project_name"
  - include: "#local_dependency"
  - include: "#remote_dependency"
  - include: "#constant"
  - include: "#localization_settings"
  - include: "#application"
  - include: "#visualization"
  - include: "#string"

repository:
  # ------------------------------
  # project name
  # ------------------------------
  project_name:
    match: \b(project_name)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  # ------------------------------
  # local dependency
  # ------------------------------
  local_dependency:
    begin: \b(local_dependency)\s*:\s*\{
    beginCaptures:
      1:
        name: keyword.control.local_dependency.lookml.manifest
    end: \}
    patterns:
      - include: "#comments"
      - include: "#local_dependency_option_string"
      - include: "#override_constant"
      - include: "#string"
      - include: "#undefined_block"

  local_dependency_option_string:
    match: \b(project)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  # ------------------------------
  # remote dependency
  # ------------------------------
  remote_dependency:
    begin: \b(remote_dependency)\s*:\s*([A-Za-z0-9_$@*.-]*)\s*\{
    beginCaptures:
      1:
        name: keyword.control.remote_dependency.lookml.manifest
      2:
        patterns:
          - include: "#ident_no_dot"
    end: \}
    patterns:
      - include: "#comments"
      - include: "#remote_dependency_option_string"
      - include: "#override_constant"
      - include: "#string"
      - include: "#undefined_block"

  remote_dependency_option_string:
    match: \b(url|ref)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  # ------------------------------
  # override constant
  # ------------------------------
  override_constant:
    begin: \b(override_constant)\s*:\s*([A-Za-z0-9_$@*.-]*)\s*\{
    beginCaptures:
      1:
        name: keyword.control.override_constant.lookml.manifest
      2:
        patterns:
          - include: "#ident_no_dot"
    end: \}
    patterns:
      - include: "#comments"
      - include: "#override_constant_option_string"
      - include: "#string"
      - include: "#undefined_block"

  override_constant_option_string:
    match: \b(value)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  # ------------------------------
  # constant
  # ------------------------------
  constant:
    begin: \b(constant)\s*:\s*([A-Za-z0-9_$@*.-]*)\s*\{
    beginCaptures:
      1:
        name: keyword.control.constant.lookml.manifest
      2:
        patterns:
          - include: "#ident_no_dot"
    end: \}
    patterns:
      - include: "#comments"
      - match: \b(export)\s*:\s*(\w*)
        captures:
          1:
            name: keyword.control.constant.export.lookml.manifest
          2:
            patterns:
              - name: support.constant.export.lookml.manifest
                match: \b(none|override_optional|override_required)\b
              - name: invalid.illegal.constant.export.lookml.manifest
                match: "[^\\s]+"
      - include: "#constant_option_string"
      - include: "#string"
      - include: "#undefined_block"

  constant_option_string:
    match: \b(value)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  # ------------------------------
  # localization settings
  # ------------------------------
  localization_settings:
    begin: \b(localization_settings)\s*:\s*\{
    beginCaptures:
      1:
        name: keyword.control.localization_settings.lookml.manifest
    end: \}
    patterns:
      - include: "#comments"
      - include: "#localization_level"
      - include: "#default_locale"
      - include: "#undefined_block"

  localization_level:
    match: \b(localization_level)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.localization_level.lookml.manifest
      2:
        patterns:
          - name: support.constant.localization_level.lookml.manifest
            match: \b(strict|permissive)\b
          - name: invalid.illegal.localization_level.lookml.manifest
            match: "[^\\s]+"

  default_locale:
    match: \b(default_locale)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.default_locale.lookml.manifest
      2:
        # supported locales
        # https://cloud.google.com/looker/docs/supported-user-interface-languages#localizing_the_looker_user_interface
        patterns:
          - name: support.constant.default_locale.lookml.manifest
            match: \b(en|cs_CZ|de_DE|es_ES|fr_FR|hi_IN|it_IT|ja_JP|ko_KR|lt_LT|nb_NO|nl_NL|pl_PL|pt_BR|pt_PT|ru_RU|sv_SE|th_TH|tr_TR|uk_UA|zh_CN|zh_TW)\b
          - name: invalid.illegal.default_locale.lookml.manifest
            match: "[^\\s]+"

  # ------------------------------
  # application
  # ------------------------------
  application:
    begin: \b(application)\s*:\s*([A-Za-z0-9_$@*.-]*)\s*\{
    beginCaptures:
      1:
        name: keyword.control.application.lookml.manifest
      2:
        patterns:
          - include: "#ident_no_dot"
    end: \}
    patterns:
      - include: "#comments"
      - include: "#application_option_string"
      - include: "#entitlements"
      - include: "#string"
      - include: "#undefined_block"

  application_option_string:
    match: \b(label|url|file)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  entitlements:
    begin: \b(entitlements)\s*:\s*\{
    beginCaptures:
      1:
        name: keyword.control.entitlements.lookml.manifest
    end: \}
    patterns:
      - include: "#comments"
      - include: "#entitlements_option_yesno"
      - include: "#entitlements_option_string_array"
      - include: "#undefined_block"

  entitlements_option_yesno:
    match: \b(local_storage|navigation|new_window|use_form_submit|use_embeds|use_downloads|use_iframes|use_clipboard)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_yesno.lookml.manifest
      2:
        patterns:
          - include: "#yes_no"

  entitlements_option_string_array:
    begin: \b(new_window_external_urls|core_api_methods|external_api_urls|oauth2_urls|global_user_attributes|scoped_user_attributes)\s*:\s*\[
    beginCaptures:
      1:
        name: keyword.control.option_string_array.lookml.manifest
    end: \]
    patterns:
      - include: "#comments"
      - include: "#string"

  # ------------------------------
  # visualization
  # ------------------------------
  visualization:
    begin: \b(visualization)\s*:\s*\{
    beginCaptures:
      1:
        name: keyword.control.visualization.lookml.manifest
    end: \}
    patterns:
      - include: "#comments"
      - include: "#visualization_option_string"
      - include: "#visualization_option_string_array"
      - include: "#string"
      - include: "#undefined_block"

  visualization_option_string:
    match: \b(id|url|label|sri_hash|file)\s*:\s*(\w*)
    captures:
      1:
        name: keyword.control.option_string.lookml.manifest
      2:
        name: invalid.illegal.string.lookml.manifest

  visualization_option_string_array:
    begin: \b(dependencies)\s*:\s*\[
    beginCaptures:
      1:
        name: keyword.control.option_string_array.lookml.manifest
    end: \]
    patterns:
      - include: "#comments"
      - include: "#string"

  # ------------------------------
  # comments
  # ------------------------------
  comments:
    name: comment.line.hash.lookml.manifest
    match: "#.*"

  # ------------------------------
  # utility
  # ------------------------------
  string:
    name: string.quoted.double.lookml.manifest
    begin: \"
    end: \"
    patterns:
      - name: variable.parameter.constant.lookml.manifest
        match: \@\{[A-Za-z0-9_]*\}
      - name: constant.character.escape.lookml.manifest
        match: \\.

  yes_no:
    patterns:
      - name: support.constant.yes_no.lookml.manifest
        match: \b(yes|no)\b
      - name: invalid.illegal.string.lookml.manifest
        match: \w+

  ident_no_dot:
    patterns:
      # object reference
      - name: invalid.illegal.ident.lookml
        match: "[$@]\\{[A-Za-z0-9_$@*.-]*\\}"
      # invalid character
      - name: invalid.illegal.ident.lookml
        match: "[A-Za-z0-9_$@*.-]*[$@*-][A-Za-z0-9_$@*.-]*"
      # has dot
      - name: invalid.illegal.ident.lookml
        match: "[A-Za-z0-9_$@*.-]*(\\.[A-Za-z0-9_$@*.-]*){1,}"

  undefined_block:
    begin: \{
    end: \}
    patterns:
      - include: "#comments"
      - include: "#undefined_block"
